<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace=" ">
	
	<!-- ********************카테고리******************* -->
	<!-- 카테고리만 생성 / 세션에 있는 memberno 가져오기 -->
	<insert id="insertCategory" parameterType="CategoryDto">
		insert into category(memberno, categoryname, admin)
		values (#{memberno}, #{categoryname}, 1)
	</insert>
	
	<!-- 카테고리조회 -->
	<select id="categoryGroup" resultType="CategoryDTO" parameterType="CategoryDto">
		select * from category
		where assemblename = #{assemblename}	
	</select>
	
	<update id="updateCategoryName" parameterType="CategoryDto">
		update category
		set categoryname = #{categoryname}
		where categoryno = #{categoryno}
	</update>
	
	
	
	
	
	<!-- **********************그룹******************** -->
	<!-- 그룹 전체 조회 -->
	<select id="selectAllGroup" resultType="GroupDto">
		select * from groups
	</select>
	
	<!-- 카테고리별 그룹 조회 -->
	<select id="selectCategoryGroup" resultType="GroupDTO">
		select * from groups
		where categoryno = #{categoryno}
	</select>
	
	<!-- 그룹생성시 미분류 카테고리를 1번이라고 했을때, 처음 생성그룹은 항상 카테고리 1번으로 들어감. -->
	<insert id="insertGroup" parameterType="GroupDto">
		insert into groups(categoryno, memberno, groupname)
		values (1, #{memberno}, #{groupname})
	</insert>
	
	<!-- 미분류카테고리에 있는 그룹을 다른 카테고리로 이동 -->
	<update id="updateGroupCategory" parameterType="GroupDto">
		update groups
		set categoryno = #{categoryno}
		where groupno = #{groupno}
	</update>
	
	<!-- 그룹 이름 변경하기 -->
	<update id="updateGroupName" parameterType="GroupDto">
		update groups
		set groupname = #{groupname}
		where groupno = #{groupno} and categoryno = #{categoryno}
	</update>
	
	
	
	
	
	
	<!-- **********************composed(멤버의 그룹정보)******************** -->
	<!-- 그룹에 초대하기 invitation 유효성검사: category에 admin이 1이면 초대가 가능-->
	<insert id="inviteGroupMem" parameterType="kr.co.assemble.dto.ComposedDTO">
		insert into composed
		values (#{groupno}, #{categoryno}, #{memberno})
	</insert>
	
	
	
	
	
	
	
	
	<!-- **********************Board(게시판)******************** -->
	   <!-- 그룹별로 게시글 조회 공지글일 경우(1) 제일 위로, 최신글이 제일 위에 올라오도록 정렬 -->
   <select id="selectGroupBoard" resultType="GMF_Dto">
      	select
		m.mi_memname, m.mi_memid, b.memberno, 
		b.bno, b.groupno, c.categoryno, b.boardnotice, 
		b.boarddate, b.boardcontents, b.boardlike, b.boardhate, 
		b.requestboolean, f.filename, f.filepath, r.reqstatus
		from category as c, memberinfo as m, groupboard as b
		left outer join file f
		on f.bno = b.bno
		left outer join requestboard r
		on r.bno = b.bno
		where
		b.categoryno = c.categoryno and
		m.mi_memberno = b.memberno and
		b.groupno = #{groupno}
   </select>
	
	<!-- bno로 전체 조회 -->
	<select id="selectOneBno" resultType="BoardDto" parameterType="int">
		select * from groupboard
		where bno = #{bno}
	</select>
	
	<!-- 글 수정 -->
	<update id="updateBoard" parameterType="BoardDto">
		update groupboard
		set boardcontents = #{boardcontents}
		where bno = #{bno}
	</update>
		
	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		delete from groupboard
		where bno = #{bno}
	</delete>	
	
	<!-- 글쓰기 : 맨처음 글을 쓰게되면 공지사항여부X=0, 좋아요싫어요 0고정, 요청이 아닌경우0 -->
	<insert id="writeBoard" >
		insert into groupboard (groupno, categoryno, memberno, boarddate, boardcontents, boardnotice, boardlike, boardhate, requestboolean, filestatus)
		values (#{groupno}, #{categoryno}, #{memberno}, now(), #{boardcontents}, 0, 0, 0, 0, #{filestatus})
	</insert>
	
	
	
	
	
	<!-- *******************요청******************** -->
	<!-- 요청 탭에서 쓰기위해서 요청여부 insert -->
	<insert id="insertRequest">
		insert into groupboard (groupno, categoryno, memberno, boarddate, boardcontents, boardnotice, boardlike, boardhate, requestboolean, filestatus)
		values (#{groupno}, #{categoryno}, #{memberno}, now(), #{boardcontents}, 0, 0, 0, 1, #{filestatus})
	</insert>
	
	<!-- 요청 제일 앞번호 가져오기 -->
	<select id="requestNewly" resultType="int">
		select bno from requestboard order by reqdate desc limit 1
	</select>
	
	<update id="requestUpdate" parameterType="ReqDto">
		update requestboard
		set responseid = #{responseid}
		where bno = #{bno}
	</update>
	
	<update id="updateStatus" parameterType="int">
		update requestboard
		set reqstatus = #{reqstatus}
		where bno = #{bno}
	</update>
	
	
	
	
	<!-- **********************파일******************** -->
	
	<!-- 파일 트리거로 들어온것중 제일 앞번호 -->
	<select id="filenoNewly" resultType="int">
		select bno from file order by filedate desc limit 1
	</select>
	
	<!-- 파일 업데이트 -->
	<update id="updateFile" parameterType="FileDto">
		update file
		set filename = #{filename}, filepath = #{filepath}, filedate = now()
		where bno = #{bno}
	</update>
	
	<!-- 파일 이름 출력(게시판에보이게) -->
	<select id="selectfileOne" parameterType="int" resultType="String">
		select filename from file
		where bno = #{bno}
	</select>
	
	<!-- 파일 이름 출력을 위한 전체 리스트 뽑기 -->
	<select id="selectFileList" parameterType="FileDto">
		select * from file
		where bno = #{bno}
	</select>
	
	<!-- 파일 수정 -->
	<update id="changeFile" parameterType="FileDto">
		update file
		set filename = #{filename}, filedate = now()
		where bno = #{bno}
	</update>
	
	
	
	
	<!-- **********************피드******************** -->
	<!-- 내가 포함된 그룹의 글들만 조회 (나의 소식피드) -->
	<select id="myGroupBoard" resultType="GMF_Dto">
		select  g.groupname, m.mi_memname, m.mi_memid, gb.memberno, gb.boardnotice, gb.boarddate, gb.boardcontents, gb.boardlike, gb.boardhate, gb.requestboolean, f.filename
		from groupboard as gb
		join groups as g
		on gb.groupno = g.groupno
		left join memberinfo as m
		on gb.memberno = m.mi_memberno
		left join file as f
		on f.bno = gb.bno
		where gb.groupno in (select groupno from composed where memberno = #{memberno}) 
		order by boarddate desc;
	</select>
	
	
	
	<!-- **********************댓글******************** -->
	<!-- 댓글 달기(bno에) -->
	<insert id="insertComment" parameterType="RecommentDto"> 
		<!-- 여기서 memberno는 게시글 작성자 -->
		<!-- aseeblemember에서 memno 가져와서 memid 뽑기 -->
		insert into recomment (bno, groupno, categoryno, memberno, redate, reid, recontents)
		values (#{bno}, #{groupno}, #{categoryno}, #{memberno}, now(), #{reid}, #{recontents})
	</insert>

	
	
	
	
	<!-- 그룹에서 멤버만 select -->
	<select id="selectGroupMember" parameterType="CMI_Dto" resultType="CMI_Dto">
		select m.mi_memid, m.mi_memname
		from memberinfo m, composed c
		where c.memberno = m.mi_memberno
		and groupno = #{groupno}
	</select>
	
	<!-- 사진만 select -->
	<select id="selectGroupImg" parameterType="CF_Dto" resultType="CF_Dto">
		select g.bno, f.filename, f.filepath
		from groupboard g inner join file f
		on f.bno = g.bno
		where 
		(f.filename like '%.jpg' or f.filename like '%.gif' or f.filename like '%.png')
		and groupno = ${groupno}
	</select>
	
	<!-- 위에 조건준것 제외한 모든 파일 select -->
	<select id="selectGroupFileName" parameterType="CF_Dto" resultType="CF_Dto">
		select g.bno, f.filename, f.filepath
		from groupboard g inner join file f
		on f.bno = g.bno
		where not f.filename like '%.jpg' and not f.filename like '%.gif' and not f.filename like '%.png'
		and groupno = #{groupno};
	</select>
	
	<!-- 그룹보드에 요청여부가 1일때 -->
	<select id="selectGroupReq" parameterType="GMF_Dto" resultType="GMF_Dto">
		select
		m.mi_memname, m.mi_memid, b.memberno, 
		b.bno, b.groupno, c.categoryno, b.boardnotice, 
		b.boarddate, b.boardcontents, b.boardlike, b.boardhate, 
		b.requestboolean, f.filename, f.filepath, r.reqstatus
		from category as c, memberinfo as m, groupboard as b
		left outer join file f
		on f.bno = b.bno
		left outer join requestboard r
		on r.bno = b.bno
		where
		b.categoryno = c.categoryno and
		m.mi_memberno = b.memberno and
		b.requestboolean = 1 and
		b.groupno = #{groupno};
	</select>
	
	<!-- 요청 진행상황 별로 조회 -->
	<select id="selectGroupReqStatus" parameterType="GMF_Dto" resultType="GMF_Dto">
		select
		m.mi_memname, m.mi_memid, b.memberno, 
		b.bno, b.groupno, c.categoryno, b.boardnotice, 
		b.boarddate, b.boardcontents, b.boardlike, b.boardhate, 
		b.requestboolean, f.filename, r.reqstatus
		from category as c, memberinfo as m, groupboard as b
		left outer join file f
		on f.bno = b.bno
		left outer join requestboard r
		on r.bno = b.bno
		where
		b.categoryno = c.categoryno and
		m.mi_memberno = b.memberno and
		b.requestboolean = 1 and
		r.reqstatus = #{reqstatus} and
		b.groupno = #{groupno}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>